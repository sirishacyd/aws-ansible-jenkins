- name: Provisioning a new EC2 instance and SG
  hosts: localhost
  connection: local
  gather_facts: False
  tags: provisioning

  pre_tasks:
    - name: Gather facts
      setup:
    - name: Print Python version
      debug:
        msg: "Using Python {{ ansible_python_version }}"
    - name: Install dependencies
      shell: "/usr/bin/python3.10 -m pip install {{ item }}"
      loop:
        - boto3
        - botocore

  vars:
    ansible_python_interpreter: /usr/bin/python3.10
    keypair: devops
    instance_type: t2.micro
    image_id: ami-05fb0b8c1424f266b
    wait: yes
    security_group: my-security-group  # Added this variable
    group: webserver
    count: 1
    region: us-east-2
    vpc_id: vpc-0657d78c02ef86ae1
    tag_name:
      Name: demo-ec2

  tasks:
    - name: Check if the EC2 instance already exists
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ tag_name.Name }}"
          instance-state-name: [ "pending", "running", "shutting-down", "stopping", "stopped" ]
      register: existing_instances

    - name: Create a security group
      amazon.aws.ec2_group:
        name: "{{ security_group }}"
        description: Security group for web server instance
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          # ... [other rules] ...
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: basic_firewall

    - name: Launch the new EC2 Instance
      amazon.aws.ec2_instance:
        security_group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        wait: "{{ wait }}"
        region: "{{ region }}"
        key_name: "{{ keypair }}"
        count: "{{ count }}"
        tags: "{{ tag_name }}"
        user_data: |
          #!/bin/bash
          sudo apt update -y
          sudo apt install docker.io -y
          sudo systemctl start docker
          sudo systemctl enable docker
          docker run -d --name game -p 8080:80 siri7474/docker-2048
      register: ec2
      when: existing_instances.instances | length == 0

